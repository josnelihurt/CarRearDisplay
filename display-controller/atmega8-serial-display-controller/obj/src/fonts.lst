   1               		.file	"fonts.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	fonts_put_char
  12               	fonts_put_char:
  13               	.LFB5:
  14               		.file 1 "src/fonts.c"
   1:src/fonts.c   **** #include "fonts.h"
   2:src/fonts.c   **** 
   3:src/fonts.c   **** #include <stdio.h>
   4:src/fonts.c   **** 
   5:src/fonts.c   **** static PROGMEM const struct font_info * const fonts[] = {
   6:src/fonts.c   **** 	& font6x8_info,
   7:src/fonts.c   **** 	& font4x5_info
   8:src/fonts.c   **** };
   9:src/fonts.c   **** 
  10:src/fonts.c   **** #ifdef DEBUG_FONT_DATA_STRUCTURES
  11:src/fonts.c   **** #define DEBUG(...) printf_P(__VA_ARGS)
  12:src/fonts.c   **** #else
  13:src/fonts.c   **** #define DEBUG /* ... */
  14:src/fonts.c   **** #endif
  15:src/fonts.c   **** 
  16:src/fonts.c   **** uint8_t
  17:src/fonts.c   **** font_puts_generic(
  18:src/fonts.c   **** 	enum font fontnum,
  19:src/fonts.c   **** 	const char *s,
  20:src/fonts.c   **** 	uint8_t *fb,
  21:src/fonts.c   **** 	int x,
  22:src/fonts.c   **** 	int xspace,
  23:src/fonts.c   **** 	int y,
  24:src/fonts.c   **** 	enum font_stamp_mode mode,
  25:src/fonts.c   **** 	int in_progmem
  26:src/fonts.c   **** ){
  27:src/fonts.c   **** 	char c;
  28:src/fonts.c   **** 	uint8_t ret;
  29:src/fonts.c   **** 	uint8_t sum = 0;
  30:src/fonts.c   **** 
  31:src/fonts.c   **** 	while(xspace > 0){
  32:src/fonts.c   **** 		if (in_progmem)
  33:src/fonts.c   **** 			c = pgm_read_byte(s++);
  34:src/fonts.c   **** 		else
  35:src/fonts.c   **** 			c = *s++;
  36:src/fonts.c   **** 
  37:src/fonts.c   **** 		if(!c)
  38:src/fonts.c   **** 			break;
  39:src/fonts.c   **** 		ret = fonts_put_char(fontnum, c, fb, x, xspace, y, mode);
  40:src/fonts.c   **** 		sum += ret;
  41:src/fonts.c   **** 		x += ret;
  42:src/fonts.c   **** 		xspace -= ret;
  43:src/fonts.c   **** 
  44:src/fonts.c   **** 		if(xspace){
  45:src/fonts.c   **** 			x++;
  46:src/fonts.c   **** 			xspace--;
  47:src/fonts.c   **** 			sum++;
  48:src/fonts.c   **** 		}
  49:src/fonts.c   **** 	}
  50:src/fonts.c   **** 	return sum;
  51:src/fonts.c   **** }
  52:src/fonts.c   **** 
  53:src/fonts.c   **** 
  54:src/fonts.c   **** uint8_t
  55:src/fonts.c   **** font_puts_RAM(
  56:src/fonts.c   **** 	enum font fontnum,
  57:src/fonts.c   **** 	const char *s,
  58:src/fonts.c   **** 	uint8_t *fb,
  59:src/fonts.c   **** 	int x,
  60:src/fonts.c   **** 	int xspace,
  61:src/fonts.c   **** 	int y,
  62:src/fonts.c   **** 	enum font_stamp_mode mode
  63:src/fonts.c   **** ){
  64:src/fonts.c   **** 	return font_puts_generic(fontnum,s,fb,x,xspace,y,mode,0);
  65:src/fonts.c   **** }
  66:src/fonts.c   **** 
  67:src/fonts.c   **** uint8_t
  68:src/fonts.c   **** font_puts_P(
  69:src/fonts.c   **** 	enum font fontnum,
  70:src/fonts.c   **** 	const char *s,
  71:src/fonts.c   **** 	uint8_t *fb,
  72:src/fonts.c   **** 	int x,
  73:src/fonts.c   **** 	int xspace,
  74:src/fonts.c   **** 	int y,
  75:src/fonts.c   **** 	enum font_stamp_mode mode
  76:src/fonts.c   **** ){
  77:src/fonts.c   **** 	return font_puts_generic(fontnum,s,fb,x,xspace,y,mode,1);
  78:src/fonts.c   **** }
  79:src/fonts.c   **** 
  80:src/fonts.c   **** 
  81:src/fonts.c   **** uint8_t
  82:src/fonts.c   **** fonts_put_char(
  83:src/fonts.c   **** 	enum font fontnum,
  84:src/fonts.c   **** 	char c,
  85:src/fonts.c   **** 	uint8_t *fb,
  86:src/fonts.c   **** 	int x,
  87:src/fonts.c   **** 	int xspace,
  88:src/fonts.c   **** 	int y,
  89:src/fonts.c   **** 	enum font_stamp_mode mode
  90:src/fonts.c   **** ){
  15               		.loc 1 90 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 AF92      		push r10
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 10, -2
  22 0002 BF92      		push r11
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 11, -3
  26 0004 CF92      		push r12
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 12, -4
  30 0006 EF92      		push r14
  31               	.LCFI3:
  32               		.cfi_def_cfa_offset 6
  33               		.cfi_offset 14, -5
  34 0008 FF92      		push r15
  35               	.LCFI4:
  36               		.cfi_def_cfa_offset 7
  37               		.cfi_offset 15, -6
  38 000a 0F93      		push r16
  39               	.LCFI5:
  40               		.cfi_def_cfa_offset 8
  41               		.cfi_offset 16, -7
  42 000c 1F93      		push r17
  43               	.LCFI6:
  44               		.cfi_def_cfa_offset 9
  45               		.cfi_offset 17, -8
  46 000e CF93      		push r28
  47               	.LCFI7:
  48               		.cfi_def_cfa_offset 10
  49               		.cfi_offset 28, -9
  50 0010 DF93      		push r29
  51               	.LCFI8:
  52               		.cfi_def_cfa_offset 11
  53               		.cfi_offset 29, -10
  54               	/* prologue: function */
  55               	/* frame size = 0 */
  56               	/* stack size = 9 */
  57               	.L__stack_usage = 9
  58               	.LBB2:
  91:src/fonts.c   **** 	const struct font_info *fip;
  92:src/fonts.c   **** 	const struct font_offset *offs;
  93:src/fonts.c   **** 	const uint8_t *data;
  94:src/fonts.c   **** 
  95:src/fonts.c   **** 	uint8_t width,height,code, mask, bits;
  96:src/fonts.c   **** 	uint16_t offset_in_data;
  97:src/fonts.c   **** 	int i;
  98:src/fonts.c   **** 
  99:src/fonts.c   **** 
 100:src/fonts.c   **** 	fip = (const struct font_info*) pgm_read_word(fonts+fontnum);
  59               		.loc 1 100 0
  60 0012 E82F      		mov r30,r24
  61 0014 F0E0      		ldi r31,0
  62 0016 EE0F      		lsl r30
  63 0018 FF1F      		rol r31
  64               	.LVL1:
  65 001a E050      		subi r30,lo8(-(fonts))
  66 001c F040      		sbci r31,hi8(-(fonts))
  67               	.LVL2:
  68               	/* #APP */
  69               	 ;  100 "src/fonts.c" 1
  70 001e A591      		lpm r26, Z+
  71 0020 B491      		lpm r27, Z
  72               		
  73               	 ;  0 "" 2
  74               	.LVL3:
  75               	/* #NOAPP */
  76               	.LBE2:
  77               	.LBB3:
 101:src/fonts.c   **** 	offs = (const struct font_offset*) pgm_read_word(&(fip->offs));
  78               		.loc 1 101 0
  79 0022 FD01      		movw r30,r26
  80 0024 3596      		adiw r30,5
  81               	.LVL4:
  82               	.LBE3:
  83               	/* #APP */
  84               	 ;  101 "src/fonts.c" 1
  85 0026 8591      		lpm r24, Z+
  86 0028 9491      		lpm r25, Z
  87               		
  88               	 ;  0 "" 2
  89               	.LVL5:
  90               	/* #NOAPP */
  91               	.LBB4:
 102:src/fonts.c   **** 	data = (const uint8_t *)pgm_read_word(&(fip->data));
  92               		.loc 1 102 0
  93 002a FD01      		movw r30,r26
  94 002c 3396      		adiw r30,3
  95               	.LVL6:
  96               	/* #APP */
  97               	 ;  102 "src/fonts.c" 1
  98 002e C591      		lpm r28, Z+
  99 0030 D491      		lpm r29, Z
 100               		
 101               	 ;  0 "" 2
 102               	.LVL7:
 103               	/* #NOAPP */
 104               	.LBE4:
 105               	.LBB5:
 103:src/fonts.c   **** 
 104:src/fonts.c   **** 	DEBUG(PSTR("Font %d based on fip=%p, offs=%p, data=%p\n"),
 105:src/fonts.c   **** 		fontnum,fip,offs,data);
 106:src/fonts.c   **** 
 107:src/fonts.c   **** 	width = pgm_read_byte(&(fip->width));
 106               		.loc 1 107 0
 107 0032 FD01      		movw r30,r26
 108               	/* #APP */
 109               	 ;  107 "src/fonts.c" 1
 110 0034 F490      		lpm r15, Z
 111               		
 112               	 ;  0 "" 2
 113               	.LVL8:
 114               	/* #NOAPP */
 115               	.LBE5:
 116               	.LBB6:
 108:src/fonts.c   **** 	height = pgm_read_byte(&(fip->height));
 117               		.loc 1 108 0
 118 0036 3196      		adiw r30,1
 119               	/* #APP */
 120               	 ;  108 "src/fonts.c" 1
 121 0038 A491      		lpm r26, Z
 122               		
 123               	 ;  0 "" 2
 124               	.LVL9:
 125               	/* #NOAPP */
 126               	.L4:
 127               	.LBE6:
 128               	.LBB7:
 109:src/fonts.c   **** 
 110:src/fonts.c   **** 	do {
 111:src/fonts.c   **** 		code = pgm_read_byte(&(offs->code));
 129               		.loc 1 111 0
 130 003a FC01      		movw r30,r24
 131               	/* #APP */
 132               	 ;  111 "src/fonts.c" 1
 133 003c 7491      		lpm r23, Z
 134               		
 135               	 ;  0 "" 2
 136               	.LVL10:
 137               	/* #NOAPP */
 138 003e 3296      		adiw r30,2
 139               	.LVL11:
 140               	.LBE7:
 141               	.LBB8:
 112:src/fonts.c   **** 		offset_in_data = pgm_read_word(&(offs->offs));
 142               		.loc 1 112 0
 143               	/* #APP */
 144               	 ;  112 "src/fonts.c" 1
 145 0040 A590      		lpm r10, Z+
 146 0042 B490      		lpm r11, Z
 147               		
 148               	 ;  0 "" 2
 149               	.LVL12:
 150               	/* #NOAPP */
 151               	.LBE8:
 113:src/fonts.c   **** 		if (code == c )
 152               		.loc 1 113 0
 153 0044 7617      		cp r23,r22
 154 0046 01F0      		breq .L2
 114:src/fonts.c   **** 			break;
 115:src/fonts.c   **** 		offs++;
 155               		.loc 1 115 0
 156 0048 0496      		adiw r24,4
 157               	.LVL13:
 116:src/fonts.c   **** 	} while (code != 0xff); /* end */
 158               		.loc 1 116 0
 159 004a 7F3F      		cpi r23,lo8(-1)
 160 004c 01F4      		brne .L4
 161 004e 00C0      		rjmp .L11
 162               	.LVL14:
 163               	.L2:
 117:src/fonts.c   **** 
 118:src/fonts.c   **** 	if (code == 0xff) {
 164               		.loc 1 118 0
 165 0050 6F3F      		cpi r22,lo8(-1)
 166 0052 01F0      		breq .L11
 119:src/fonts.c   **** 		DEBUG(PSTR("  Char 0x%02x not found.\n"),c);
 120:src/fonts.c   **** 		return 0;
 121:src/fonts.c   **** 	}
 122:src/fonts.c   **** 
 123:src/fonts.c   **** 	DEBUG(PSTR("  Char 0x%02x, offset info @ %p, offs = 0x%02x\n"),
 124:src/fonts.c   **** 		code,offs,offset_in_data);
 125:src/fonts.c   **** 
 126:src/fonts.c   **** 	/* seek to requested character */
 127:src/fonts.c   **** 	data += offset_in_data;
 167               		.loc 1 127 0
 168 0054 AC0E      		add r10,r28
 169 0056 BD1E      		adc r11,r29
 170               	.LVL15:
 128:src/fonts.c   **** 	fb += x;
 171               		.loc 1 128 0
 172 0058 EA01      		movw r28,r20
 173               	.LVL16:
 174 005a C20F      		add r28,r18
 175 005c D31F      		adc r29,r19
 176               	.LVL17:
 129:src/fonts.c   **** 	mask = ((1<<height)-1) << y;
 177               		.loc 1 129 0
 178 005e 61E0      		ldi r22,lo8(1)
 179 0060 70E0      		ldi r23,0
 180               	.LVL18:
 181 0062 00C0      		rjmp 2f
 182               		1:
 183 0064 660F      		lsl r22
 184 0066 771F      		rol r23
 185               		2:
 186 0068 AA95      		dec r26
 187 006a 02F4      		brpl 1b
 188 006c 6150      		subi r22,1
 189 006e 7109      		sbc r23,__zero_reg__
 190 0070 0E2C      		mov r0,r14
 191 0072 00C0      		rjmp 2f
 192               		1:
 193 0074 660F      		lsl r22
 194               		2:
 195 0076 0A94      		dec r0
 196 0078 02F4      		brpl 1b
 197 007a 762F      		mov r23,r22
 198               	.LVL19:
 130:src/fonts.c   **** 
 131:src/fonts.c   **** 
 132:src/fonts.c   **** 	for (i=0;i<width;i++) {
 199               		.loc 1 132 0
 200 007c 80E0      		ldi r24,0
 201 007e 90E0      		ldi r25,0
 202               	.LVL20:
 203 0080 2F2D      		mov r18,r15
 204               	.LVL21:
 205 0082 30E0      		ldi r19,0
 133:src/fonts.c   **** 		bits = pgm_read_byte(data);
 134:src/fonts.c   **** 		bits <<= y;
 135:src/fonts.c   **** 
 136:src/fonts.c   **** 		if (mode == FONT_STAMP_INV)
 137:src/fonts.c   **** 			bits = ~bits;
 138:src/fonts.c   **** 
 139:src/fonts.c   **** 		data++;
 140:src/fonts.c   **** 		DEBUG(PSTR("Character 0x%02x, row %d, data @ %p = 0x%02x.\n"),
 141:src/fonts.c   **** 			c, i, data, bits);
 142:src/fonts.c   **** 		*fb = (*fb & ~mask)|(bits & mask);
 206               		.loc 1 142 0
 207 0084 6095      		com r22
 208               	.LVL22:
 209               	.L5:
 132:src/fonts.c   **** 	for (i=0;i<width;i++) {
 210               		.loc 1 132 0 discriminator 1
 211 0086 8217      		cp r24,r18
 212 0088 9307      		cpc r25,r19
 213 008a 04F4      		brge .L3
 214               	.LVL23:
 215 008c F501      		movw r30,r10
 216 008e E80F      		add r30,r24
 217 0090 F91F      		adc r31,r25
 218               	.LVL24:
 219               	.LBB9:
 133:src/fonts.c   **** 		bits = pgm_read_byte(data);
 220               		.loc 1 133 0
 221               	/* #APP */
 222               	 ;  133 "src/fonts.c" 1
 223 0092 E491      		lpm r30, Z
 224               		
 225               	 ;  0 "" 2
 226               	.LVL25:
 227               	/* #NOAPP */
 228               	.LBE9:
 134:src/fonts.c   **** 		bits <<= y;
 229               		.loc 1 134 0
 230 0094 0E2C      		mov r0,r14
 231 0096 00C0      		rjmp 2f
 232               		1:
 233 0098 EE0F      		lsl r30
 234               		2:
 235 009a 0A94      		dec r0
 236 009c 02F4      		brpl 1b
 237               	.LVL26:
 238 009e 4E2F      		mov r20,r30
 136:src/fonts.c   **** 		if (mode == FONT_STAMP_INV)
 239               		.loc 1 136 0
 240 00a0 51E0      		ldi r21,lo8(1)
 241 00a2 C512      		cpse r12,r21
 242 00a4 00C0      		rjmp .L6
 137:src/fonts.c   **** 			bits = ~bits;
 243               		.loc 1 137 0
 244 00a6 4095      		com r20
 245               	.LVL27:
 246               	.L6:
 247               		.loc 1 142 0
 248 00a8 4723      		and r20,r23
 249               	.LVL28:
 250 00aa 5881      		ld r21,Y
 251 00ac 5623      		and r21,r22
 252 00ae 452B      		or r20,r21
 253 00b0 4993      		st Y+,r20
 254               	.LVL29:
 143:src/fonts.c   **** 		fb++;
 144:src/fonts.c   **** 
 145:src/fonts.c   **** 		if(i >= xspace)
 255               		.loc 1 145 0
 256 00b2 8017      		cp r24,r16
 257 00b4 9107      		cpc r25,r17
 258 00b6 04F4      		brge .L3
 132:src/fonts.c   **** 	for (i=0;i<width;i++) {
 259               		.loc 1 132 0
 260 00b8 0196      		adiw r24,1
 261               	.LVL30:
 262 00ba 00C0      		rjmp .L5
 263               	.LVL31:
 264               	.L11:
 120:src/fonts.c   **** 		return 0;
 265               		.loc 1 120 0
 266 00bc 80E0      		ldi r24,0
 267               	.LVL32:
 268               	.L3:
 269               	/* epilogue start */
 146:src/fonts.c   **** 			break;
 147:src/fonts.c   **** 	}
 148:src/fonts.c   **** 
 149:src/fonts.c   **** 	return i;
 150:src/fonts.c   **** }
 270               		.loc 1 150 0
 271 00be DF91      		pop r29
 272 00c0 CF91      		pop r28
 273 00c2 1F91      		pop r17
 274 00c4 0F91      		pop r16
 275               	.LVL33:
 276 00c6 FF90      		pop r15
 277               	.LVL34:
 278 00c8 EF90      		pop r14
 279               	.LVL35:
 280 00ca CF90      		pop r12
 281               	.LVL36:
 282 00cc BF90      		pop r11
 283 00ce AF90      		pop r10
 284 00d0 0895      		ret
 285               		.cfi_endproc
 286               	.LFE5:
 288               	.global	font_puts_generic
 290               	font_puts_generic:
 291               	.LFB2:
  26:src/fonts.c   **** ){
 292               		.loc 1 26 0
 293               		.cfi_startproc
 294               	.LVL37:
 295 00d2 2F92      		push r2
 296               	.LCFI9:
 297               		.cfi_def_cfa_offset 3
 298               		.cfi_offset 2, -2
 299 00d4 3F92      		push r3
 300               	.LCFI10:
 301               		.cfi_def_cfa_offset 4
 302               		.cfi_offset 3, -3
 303 00d6 4F92      		push r4
 304               	.LCFI11:
 305               		.cfi_def_cfa_offset 5
 306               		.cfi_offset 4, -4
 307 00d8 5F92      		push r5
 308               	.LCFI12:
 309               		.cfi_def_cfa_offset 6
 310               		.cfi_offset 5, -5
 311 00da 6F92      		push r6
 312               	.LCFI13:
 313               		.cfi_def_cfa_offset 7
 314               		.cfi_offset 6, -6
 315 00dc 7F92      		push r7
 316               	.LCFI14:
 317               		.cfi_def_cfa_offset 8
 318               		.cfi_offset 7, -7
 319 00de 8F92      		push r8
 320               	.LCFI15:
 321               		.cfi_def_cfa_offset 9
 322               		.cfi_offset 8, -8
 323 00e0 9F92      		push r9
 324               	.LCFI16:
 325               		.cfi_def_cfa_offset 10
 326               		.cfi_offset 9, -9
 327 00e2 AF92      		push r10
 328               	.LCFI17:
 329               		.cfi_def_cfa_offset 11
 330               		.cfi_offset 10, -10
 331 00e4 BF92      		push r11
 332               	.LCFI18:
 333               		.cfi_def_cfa_offset 12
 334               		.cfi_offset 11, -11
 335 00e6 CF92      		push r12
 336               	.LCFI19:
 337               		.cfi_def_cfa_offset 13
 338               		.cfi_offset 12, -12
 339 00e8 DF92      		push r13
 340               	.LCFI20:
 341               		.cfi_def_cfa_offset 14
 342               		.cfi_offset 13, -13
 343 00ea EF92      		push r14
 344               	.LCFI21:
 345               		.cfi_def_cfa_offset 15
 346               		.cfi_offset 14, -14
 347 00ec FF92      		push r15
 348               	.LCFI22:
 349               		.cfi_def_cfa_offset 16
 350               		.cfi_offset 15, -15
 351 00ee 0F93      		push r16
 352               	.LCFI23:
 353               		.cfi_def_cfa_offset 17
 354               		.cfi_offset 16, -16
 355 00f0 1F93      		push r17
 356               	.LCFI24:
 357               		.cfi_def_cfa_offset 18
 358               		.cfi_offset 17, -17
 359 00f2 CF93      		push r28
 360               	.LCFI25:
 361               		.cfi_def_cfa_offset 19
 362               		.cfi_offset 28, -18
 363 00f4 DF93      		push r29
 364               	.LCFI26:
 365               		.cfi_def_cfa_offset 20
 366               		.cfi_offset 29, -19
 367 00f6 00D0      		rcall .
 368 00f8 00D0      		rcall .
 369               	.LCFI27:
 370               		.cfi_def_cfa_offset 24
 371 00fa CDB7      		in r28,__SP_L__
 372 00fc DEB7      		in r29,__SP_H__
 373               	.LCFI28:
 374               		.cfi_def_cfa_register 28
 375               	/* prologue: function */
 376               	/* frame size = 4 */
 377               	/* stack size = 22 */
 378               	.L__stack_usage = 22
 379 00fe 982F      		mov r25,r24
 380 0100 3A01      		movw r6,r20
 381 0102 4901      		movw r8,r18
 382 0104 1C83      		std Y+4,r17
 383 0106 0B83      		std Y+3,r16
 384 0108 2701      		movw r4,r14
 385 010a DC2C      		mov r13,r12
 386 010c 1501      		movw r2,r10
 387               	.LVL38:
  31:src/fonts.c   **** 	while(xspace > 0){
 388               		.loc 1 31 0
 389 010e 5B01      		movw r10,r22
 390               	.LVL39:
  29:src/fonts.c   **** 	uint8_t sum = 0;
 391               		.loc 1 29 0
 392 0110 70E0      		ldi r23,0
 393               	.LVL40:
 394               	.L14:
  31:src/fonts.c   **** 	while(xspace > 0){
 395               		.loc 1 31 0 discriminator 1
 396 0112 2B81      		ldd r18,Y+3
 397 0114 3C81      		ldd r19,Y+4
 398 0116 1216      		cp __zero_reg__,r18
 399 0118 1306      		cpc __zero_reg__,r19
 400 011a 04F4      		brge .L24
 401               	.LBB10:
  33:src/fonts.c   **** 			c = pgm_read_byte(s++);
 402               		.loc 1 33 0
 403 011c F501      		movw r30,r10
 404               	.LBE10:
  32:src/fonts.c   **** 		if (in_progmem)
 405               		.loc 1 32 0
 406 011e 2114      		cp r2,__zero_reg__
 407 0120 3104      		cpc r3,__zero_reg__
 408 0122 01F0      		breq .L15
 409               	.LVL41:
 410               	.LBB11:
  33:src/fonts.c   **** 			c = pgm_read_byte(s++);
 411               		.loc 1 33 0
 412               	/* #APP */
 413               	 ;  33 "src/fonts.c" 1
 414 0124 6491      		lpm r22, Z
 415               		
 416               	 ;  0 "" 2
 417               	.LVL42:
 418               	/* #NOAPP */
 419               	.LBE11:
 420 0126 00C0      		rjmp .L16
 421               	.LVL43:
 422               	.L15:
  35:src/fonts.c   **** 			c = *s++;
 423               		.loc 1 35 0
 424 0128 6081      		ld r22,Z
 425               	.LVL44:
 426               	.L16:
  37:src/fonts.c   **** 		if(!c)
 427               		.loc 1 37 0
 428 012a 6623      		tst r22
 429 012c 01F0      		breq .L24
  39:src/fonts.c   **** 		ret = fonts_put_char(fontnum, c, fb, x, xspace, y, mode);
 430               		.loc 1 39 0
 431 012e CD2C      		mov r12,r13
 432               	.LVL45:
 433 0130 7201      		movw r14,r4
 434               	.LVL46:
 435 0132 0B81      		ldd r16,Y+3
 436 0134 1C81      		ldd r17,Y+4
 437 0136 9401      		movw r18,r8
 438 0138 A301      		movw r20,r6
 439 013a 892F      		mov r24,r25
 440 013c 7983      		std Y+1,r23
 441 013e 9A83      		std Y+2,r25
 442 0140 00D0      		rcall fonts_put_char
 443               	.LVL47:
  40:src/fonts.c   **** 		sum += ret;
 444               		.loc 1 40 0
 445 0142 7981      		ldd r23,Y+1
 446 0144 780F      		add r23,r24
 447               	.LVL48:
  41:src/fonts.c   **** 		x += ret;
 448               		.loc 1 41 0
 449 0146 282F      		mov r18,r24
 450 0148 30E0      		ldi r19,0
 451 014a 820E      		add r8,r18
 452 014c 931E      		adc r9,r19
 453               	.LVL49:
  42:src/fonts.c   **** 		xspace -= ret;
 454               		.loc 1 42 0
 455 014e 4B81      		ldd r20,Y+3
 456 0150 5C81      		ldd r21,Y+4
 457 0152 421B      		sub r20,r18
 458 0154 530B      		sbc r21,r19
 459 0156 5C83      		std Y+4,r21
 460 0158 4B83      		std Y+3,r20
 461               	.LVL50:
  44:src/fonts.c   **** 		if(xspace){
 462               		.loc 1 44 0
 463 015a 9A81      		ldd r25,Y+2
 464 015c 452B      		or r20,r21
 465 015e 01F0      		breq .L18
 466               	.LVL51:
  45:src/fonts.c   **** 			x++;
 467               		.loc 1 45 0
 468 0160 5FEF      		ldi r21,-1
 469 0162 851A      		sub r8,r21
 470 0164 950A      		sbc r9,r21
 471               	.LVL52:
  46:src/fonts.c   **** 			xspace--;
 472               		.loc 1 46 0
 473 0166 EB81      		ldd r30,Y+3
 474 0168 FC81      		ldd r31,Y+4
 475 016a 3197      		sbiw r30,1
 476 016c FC83      		std Y+4,r31
 477 016e EB83      		std Y+3,r30
 478               	.LVL53:
  47:src/fonts.c   **** 			sum++;
 479               		.loc 1 47 0
 480 0170 7F5F      		subi r23,lo8(-(1))
 481               	.LVL54:
 482               	.L18:
 483 0172 FFEF      		ldi r31,-1
 484 0174 AF1A      		sub r10,r31
 485 0176 BF0A      		sbc r11,r31
 486 0178 00C0      		rjmp .L14
 487               	.LVL55:
 488               	.L24:
  51:src/fonts.c   **** }
 489               		.loc 1 51 0
 490 017a 872F      		mov r24,r23
 491               	/* epilogue start */
 492 017c 0F90      		pop __tmp_reg__
 493 017e 0F90      		pop __tmp_reg__
 494 0180 0F90      		pop __tmp_reg__
 495 0182 0F90      		pop __tmp_reg__
 496 0184 DF91      		pop r29
 497 0186 CF91      		pop r28
 498 0188 1F91      		pop r17
 499 018a 0F91      		pop r16
 500 018c FF90      		pop r15
 501 018e EF90      		pop r14
 502 0190 DF90      		pop r13
 503 0192 CF90      		pop r12
 504               	.LVL56:
 505 0194 BF90      		pop r11
 506 0196 AF90      		pop r10
 507 0198 9F90      		pop r9
 508 019a 8F90      		pop r8
 509               	.LVL57:
 510 019c 7F90      		pop r7
 511 019e 6F90      		pop r6
 512               	.LVL58:
 513 01a0 5F90      		pop r5
 514 01a2 4F90      		pop r4
 515               	.LVL59:
 516 01a4 3F90      		pop r3
 517 01a6 2F90      		pop r2
 518               	.LVL60:
 519 01a8 0895      		ret
 520               		.cfi_endproc
 521               	.LFE2:
 523               	.global	font_puts_RAM
 525               	font_puts_RAM:
 526               	.LFB3:
  63:src/fonts.c   **** ){
 527               		.loc 1 63 0
 528               		.cfi_startproc
 529               	.LVL61:
 530 01aa AF92      		push r10
 531               	.LCFI29:
 532               		.cfi_def_cfa_offset 3
 533               		.cfi_offset 10, -2
 534 01ac BF92      		push r11
 535               	.LCFI30:
 536               		.cfi_def_cfa_offset 4
 537               		.cfi_offset 11, -3
 538 01ae CF92      		push r12
 539               	.LCFI31:
 540               		.cfi_def_cfa_offset 5
 541               		.cfi_offset 12, -4
 542 01b0 EF92      		push r14
 543               	.LCFI32:
 544               		.cfi_def_cfa_offset 6
 545               		.cfi_offset 14, -5
 546 01b2 FF92      		push r15
 547               	.LCFI33:
 548               		.cfi_def_cfa_offset 7
 549               		.cfi_offset 15, -6
 550 01b4 0F93      		push r16
 551               	.LCFI34:
 552               		.cfi_def_cfa_offset 8
 553               		.cfi_offset 16, -7
 554 01b6 1F93      		push r17
 555               	.LCFI35:
 556               		.cfi_def_cfa_offset 9
 557               		.cfi_offset 17, -8
 558               	/* prologue: function */
 559               	/* frame size = 0 */
 560               	/* stack size = 7 */
 561               	.L__stack_usage = 7
  64:src/fonts.c   **** 	return font_puts_generic(fontnum,s,fb,x,xspace,y,mode,0);
 562               		.loc 1 64 0
 563 01b8 A12C      		mov r10,__zero_reg__
 564 01ba B12C      		mov r11,__zero_reg__
 565 01bc 00D0      		rcall font_puts_generic
 566               	.LVL62:
 567               	/* epilogue start */
  65:src/fonts.c   **** }
 568               		.loc 1 65 0
 569 01be 1F91      		pop r17
 570 01c0 0F91      		pop r16
 571               	.LVL63:
 572 01c2 FF90      		pop r15
 573 01c4 EF90      		pop r14
 574               	.LVL64:
 575 01c6 CF90      		pop r12
 576               	.LVL65:
 577 01c8 BF90      		pop r11
 578 01ca AF90      		pop r10
 579 01cc 0895      		ret
 580               		.cfi_endproc
 581               	.LFE3:
 583               	.global	font_puts_P
 585               	font_puts_P:
 586               	.LFB4:
  76:src/fonts.c   **** ){
 587               		.loc 1 76 0
 588               		.cfi_startproc
 589               	.LVL66:
 590 01ce AF92      		push r10
 591               	.LCFI36:
 592               		.cfi_def_cfa_offset 3
 593               		.cfi_offset 10, -2
 594 01d0 BF92      		push r11
 595               	.LCFI37:
 596               		.cfi_def_cfa_offset 4
 597               		.cfi_offset 11, -3
 598 01d2 CF92      		push r12
 599               	.LCFI38:
 600               		.cfi_def_cfa_offset 5
 601               		.cfi_offset 12, -4
 602 01d4 EF92      		push r14
 603               	.LCFI39:
 604               		.cfi_def_cfa_offset 6
 605               		.cfi_offset 14, -5
 606 01d6 FF92      		push r15
 607               	.LCFI40:
 608               		.cfi_def_cfa_offset 7
 609               		.cfi_offset 15, -6
 610 01d8 0F93      		push r16
 611               	.LCFI41:
 612               		.cfi_def_cfa_offset 8
 613               		.cfi_offset 16, -7
 614 01da 1F93      		push r17
 615               	.LCFI42:
 616               		.cfi_def_cfa_offset 9
 617               		.cfi_offset 17, -8
 618               	/* prologue: function */
 619               	/* frame size = 0 */
 620               	/* stack size = 7 */
 621               	.L__stack_usage = 7
  77:src/fonts.c   **** 	return font_puts_generic(fontnum,s,fb,x,xspace,y,mode,1);
 622               		.loc 1 77 0
 623 01dc AA24      		clr r10
 624 01de A394      		inc r10
 625 01e0 B12C      		mov r11,__zero_reg__
 626 01e2 00D0      		rcall font_puts_generic
 627               	.LVL67:
 628               	/* epilogue start */
  78:src/fonts.c   **** }
 629               		.loc 1 78 0
 630 01e4 1F91      		pop r17
 631 01e6 0F91      		pop r16
 632               	.LVL68:
 633 01e8 FF90      		pop r15
 634 01ea EF90      		pop r14
 635               	.LVL69:
 636 01ec CF90      		pop r12
 637               	.LVL70:
 638 01ee BF90      		pop r11
 639 01f0 AF90      		pop r10
 640 01f2 0895      		ret
 641               		.cfi_endproc
 642               	.LFE4:
 644               		.section	.progmem.data,"a",@progbits
 647               	fonts:
 648 0000 0000      		.word	font6x8_info
 649 0002 0000      		.word	font4x5_info
 650               		.text
 651               	.Letext0:
 652               		.file 2 "/usr/lib/avr/include/stdint.h"
 653               		.file 3 "include/fonts.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 fonts.c
     /tmp/ccNkAp4V.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccNkAp4V.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccNkAp4V.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccNkAp4V.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccNkAp4V.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccNkAp4V.s:12     .text:0000000000000000 fonts_put_char
     /tmp/ccNkAp4V.s:647    .progmem.data:0000000000000000 fonts
     /tmp/ccNkAp4V.s:290    .text:00000000000000d2 font_puts_generic
     /tmp/ccNkAp4V.s:525    .text:00000000000001aa font_puts_RAM
     /tmp/ccNkAp4V.s:585    .text:00000000000001ce font_puts_P

UNDEFINED SYMBOLS
font6x8_info
font4x5_info
